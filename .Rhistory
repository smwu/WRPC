subgroups_wtd[, 1] <- table(study_data$subgroup_income_nativity_gender_age)
subgroups_wtd[, 2] <- sapply(1:res_wrpc$data_vars$H, function(h)
sum(res_wrpc$data_vars$sampling_wt[res_wrpc$data_vars$h_all == h]))
survey::svyby(~1, ~subgroup_income_nativity_gender_age,
svy_design_wts_only, svytotal, na.rm = TRUE)
survey::svyby(~1, ~subgroup_income_nativity_gender_age,
svy_design_wts_only, svytotal, na.rm = TRUE)
names(svy_design_wts_only)
survey::svyby(~1, ~subgroup_income_nativity_gender_age,
svy_design_wts_only, svytotal, na.rm = TRUE)
survey::svyby(~subgroup_income_nativity_gender_age,
svy_design_wts_only, svytotal, na.rm = TRUE)
svy_design_wts_only <- survey::svydesign(id = ~1,
weights = ~WEIGHT_FINAL_EXPANDED,
data = study_data)
?svyby
### Survey design
svy_data <- data.frame(study_data, class = res_wrpc$estimates$c_all)
### Survey design
svy_data <- data.frame(study_data_drop_na, class = res_wrpc$estimates$c_all)
# Subset to Puerto Rican background: n = 2066
study_data <- comb_data %>%
filter(BKGRD1_C6 %in% c(4))
### Create subgroup based on income, nativity, gender, age
subgroup_labels <-
c("incL-nonUS-M-young", "incL-nonUS-M-old", "incL-nonUS-F-young", "incL-nonUS-F-old",
"incL-US-M-young", "incL-US-M-old", "incL-US-F-young", "incL-US-F-old",
"incH-nonUS-M-young", "incH-nonUS-M-old", "incH-nonUS-F-young", "incH-nonUS-F-old",
"incH-US-M-young", "incH-US-M-old", "incH-US-F-young", "incH-US-F-old")
study_data <- study_data %>%
mutate(subgroup_income_nativity_gender_age = case_when(
INCOME_C2 == 1 & US_BORN == 0 & GENDER == 1 & AGEGROUP_C2 == 1 ~ 1,  # incL-nonUS-M-young
INCOME_C2 == 1 & US_BORN == 0 & GENDER == 1 & AGEGROUP_C2 == 2 ~ 2,  # incL-nonUS-M-old
INCOME_C2 == 1 & US_BORN == 0 & GENDER == 2 & AGEGROUP_C2 == 1 ~ 3,  # incL-nonUS-F-young
INCOME_C2 == 1 & US_BORN == 0 & GENDER == 2 & AGEGROUP_C2 == 2 ~ 4,  # incL-nonUS-F-old
INCOME_C2 == 1 & US_BORN == 1 & GENDER == 1 & AGEGROUP_C2 == 1 ~ 5,  # incL-US-M-young
INCOME_C2 == 1 & US_BORN == 1 & GENDER == 1 & AGEGROUP_C2 == 2 ~ 6,  # incL-US-M-old
INCOME_C2 == 1 & US_BORN == 1 & GENDER == 2 & AGEGROUP_C2 == 1 ~ 7,  # incL-US-F-young
INCOME_C2 == 1 & US_BORN == 1 & GENDER == 2 & AGEGROUP_C2 == 2 ~ 8,  # incL-US-F-old
INCOME_C2 == 2 & US_BORN == 0 & GENDER == 1 & AGEGROUP_C2 == 1 ~ 9,  # incH-nonUS-M-young
INCOME_C2 == 2 & US_BORN == 0 & GENDER == 1 & AGEGROUP_C2 == 2 ~ 10, # incH-nonUS-M-old
INCOME_C2 == 2 & US_BORN == 0 & GENDER == 2 & AGEGROUP_C2 == 1 ~ 11, # incH-nonUS-F-young
INCOME_C2 == 2 & US_BORN == 0 & GENDER == 2 & AGEGROUP_C2 == 2 ~ 12, # incH-nonUS-F-old
INCOME_C2 == 2 & US_BORN == 1 & GENDER == 1 & AGEGROUP_C2 == 1 ~ 13,  # incH-US-M-young
INCOME_C2 == 2 & US_BORN == 1 & GENDER == 1 & AGEGROUP_C2 == 2 ~ 14, # incH-US-M-old
INCOME_C2 == 2 & US_BORN == 1 & GENDER == 2 & AGEGROUP_C2 == 1 ~ 15, # incH-US-F-young
INCOME_C2 == 2 & US_BORN == 1 & GENDER == 2 & AGEGROUP_C2 == 2 ~ 16, # incH-US-F-old
.default = NA
))
table(study_data$subgroup_income_nativity_gender_age)
# Check missingness
# Note: FPQ is already subsetted to complete cases
naniar::gg_miss_var(study_data %>%
select(ID, STRAT, PSU_ID, WEIGHT_FINAL_EXPANDED,
INCOME_C2, US_BORN, GENDER, AGEGROUP_C2,
subgroup_income_nativity_gender_age))
# Drop NAs
# Sample size after dropping all missingness: n = 1896
study_data_dropna <- study_data %>%
select(ID, STRAT, PSU_ID, WEIGHT_FINAL_EXPANDED,
subgroup_income_nativity_gender_age, citrus_juice:soup_oth) %>%
drop_na()
### Survey design
svy_data <- data.frame(study_data_dropna, class = res_wrpc$estimates$c_all)
svy_design <- survey::svydesign(id = ~PSU_ID,
weights = ~WEIGHT_FINAL_EXPANDED,
strata = ~STRAT, data = svy_data)
svy_design_wts_only <- survey::svydesign(id = ~1,
weights = ~WEIGHT_FINAL_EXPANDED,
data = svy_data)
survey::svyby(~1, ~subgroup_income_nativity_gender_age,
svy_design_wts_only, svytotal, na.rm = TRUE)
survey::svyby(~class, ~subgroup_income_nativity_gender_age,
svy_design_wts_only, svytotal, na.rm = TRUE)
survey::svyby(~subgroup_income_nativity_gender_age, ~class,
svy_design_wts_only, svymean, na.rm = TRUE)
svy_data <- svy_data %>%
mutate(subgroup = as.factor(subgroup_income_nativity_gender_age),
class = as.factor(class))
svy_design <- survey::svydesign(id = ~PSU_ID,
weights = ~WEIGHT_FINAL_EXPANDED,
strata = ~STRAT, data = svy_data)
svy_design_wts_only <- survey::svydesign(id = ~1,
weights = ~WEIGHT_FINAL_EXPANDED,
data = svy_data)
survey::svyby(~class, ~subgroup_income_nativity_gender_age,
svy_design_wts_only, svytotal, na.rm = TRUE)
survey::svyby(~subgroup_income_nativity_gender_age, ~class,
svy_design_wts_only, svymean, na.rm = TRUE)
survey::svyby(~subgroup, ~class,
svy_design_wts_only, svymean, na.rm = TRUE)
temp <- as.data.frame(survey::svyby(~subgroup, ~class, svy_design_wts_only,
svymean, na.rm = TRUE))
View(temp)
round(temp, 3)
temp <- as.data.frame(survey::svyby(~class, ~subgroup, svy_design_wts_only,
svymean, na.rm = TRUE))
row_props <- temp %>% select(class1:class4)
rowSums(row_props)
View(row_props)
kable(row_props, digits = 3, booktabs = TRUE)
knitr::kable(row_props, digits = 3, booktabs = TRUE)
grid <- table(res$estimates$c_all, res$data_vars$h_all)
grid2 <- prop.table(grid, margin = 2)
grid
grid2
svy_design <- survey::svydesign(id = ~PSU_ID,
weights = ~WEIGHT_FINAL_EXPANDED,
strata = ~STRAT, data = svy_data)
temp2 <- as.data.frame(survey::svyby(~class, ~subgroup, svy_design,
svymean, na.rm = TRUE))
svy_data <- data.frame(sampling_wt = res$data_vars$sampling_wt,
subgroup = as.factor(res$data_vars$h_all)
class = as.factor(res$estimates$c_all))
svy_data <- data.frame(sampling_wt = res$data_vars$sampling_wt,
subgroup = as.factor(res$data_vars$h_all),
class = as.factor(res$estimates$c_all))
svy_design_wts_only <- survey::svydesign(id = ~1,
weights = ~sampling_wt,
data = svy_data)
# row proportions
temp <- as.data.frame(survey::svyby(~class, ~subgroup, svy_design_wts_only,
svymean, na.rm = TRUE))
# Transpose and only select estimates
grid <- t(temp %>% select(class1:class4))
knitr::kable(grid, digits = 3, booktabs = TRUE)
View(grid)
class_labels <- 1:res$estimates$K_red
subgroup_labels <- 1:res$data_vars$H
grid_plot <- as.data.frame(grid)
colnames(grid_plot) <- c(class_title, subgroup_title, "Frequency")
subgroup_title = "Subgroup"
class_title = "Class"
colnames(grid_plot) <- c(class_title, subgroup_title, "Frequency")
grid_plot %>% ggplot(aes(x = factor(Subgroup, levels = rev(1:res$data_vars$H),
labels = rev(subgroup_labels)), y = Frequency,
group = factor(Class, levels = rev(class_labels)),
fill = factor(Class, levels = class_labels))) +
geom_bar(stat = "identity", position = "stack") +
ggplot2::labs(x = subgroup_title, y = "Frequency", fill = class_title) +
coord_flip() +
ggplot2::theme_classic() +
ggplot2::theme(text = ggplot2::element_text(size = 15),
axis.text.x = ggplot2::element_text(size = 12, color = "black"),
axis.text.y = ggplot2::element_text(size = 11, color = "black"),
axis.title.x = ggplot2::element_text(size = 13, color = "black", face = "bold"),
axis.title.y = ggplot2::element_text(size = 13, color = "black", face = "bold"),
legend.title = ggplot2::element_text(size = 13, color = "black", face = "bold"),
legend.text = ggplot2::element_text(size = 11, color = "black"),
legend.position = "right")
View(grid_plot)
subgroup_labels <- 1:res$data_vars$H
grid_plot <- as.data.frame(grid)
grid <- table(res$estimates$c_all, res$data_vars$h_all)
grid <- prop.table(grid, margin = 2)
View(temp)
?pivot_wider
?pivot_longer
grid_expand <- grid %>% pivot_longer(cols = class1:class4, names_to = "class",
values_to = "frequency")
# Transpose and only select estimates
grid <- as.data.frame(t(temp %>% select(class1:class4)))
grid <- table(res$estimates$c_all, res$data_vars$h_all)
grid <- prop.table(grid, margin = 2)
grid_unwt <- grid
grid_unwt
# Transpose and only select estimates
grid <- as.data.frame(t(temp %>% select(class1:class4)))
temp_expand <- temp %>% pivot_longer(cols = class1:class4, names_to = "class",
values_to = "Freq")
View(temp_expand)
# row proportions
temp <- as.data.frame(survey::svyby(~class, ~subgroup, svy_design_wts_only,
svymean, na.rm = TRUE))
colnames(temp)
temp_expand <- temp %>%
select(subgroup:class4) %>%
pivot_longer(cols = class1:class4, names_to = "class",
values_to = "Freq")
grid <- temp %>%
select(subgroup:class4) %>%
pivot_longer(cols = class1:class4, names_to = "class",
values_to = "Freq")
grid_plot <- as.data.frame(grid)
colnames(grid_plot) <- c(class_title, subgroup_title, "Frequency")
View(grid_plot)
grid <- temp %>%
select(class1:class4, subgroup) %>%
pivot_longer(cols = class1:class4, names_to = "class",
values_to = "Freq")
grid_plot <- as.data.frame(grid)
grid <- temp %>%
select(subgroup:class4) %>%
pivot_longer(cols = class1:class4, names_to = "class",
values_to = "Freq")
grid <- temp %>%
select(subgroup:class4) %>%
pivot_longer(cols = class1:class4, names_to = "class",
values_to = "Freq") %>%
select(class, subgroup, Freq)
grid_plot <- as.data.frame(grid)
grid <- temp %>%
select(subgroup:class4) %>%
mutate(class == stringr::string_remove(class, "class")) %>%
pivot_longer(cols = class1:class4, names_to = "class",
values_to = "Freq") %>%
select(class, subgroup, Freq)
grid <- temp %>%
select(subgroup:class4) %>%
mutate(class == stringr::str_remove(class, "class")) %>%
pivot_longer(cols = class1:class4, names_to = "class",
values_to = "Freq") %>%
select(class, subgroup, Freq)
grid <- temp %>%
select(subgroup:class4) %>%
pivot_longer(cols = class1:class4, names_to = "class",
values_to = "Freq") %>%
mutate(class == stringr::str_remove(class, "class")) %>%
select(class, subgroup, Freq)
grid_plot <- as.data.frame(grid)
str_remove(grid_plot$class, "class")
grid <- temp %>%
select(subgroup:class4) %>%
pivot_longer(cols = class1:class4, names_to = "class",
values_to = "Freq") %>%
select(class, subgroup, Freq) %>%
mutate(class == stringr::str_remove(class, "class"))
View(grid)
grid <- temp %>%
select(subgroup:class4) %>%
pivot_longer(cols = class1:class4, names_to = "class_v1",
values_to = "Freq") %>%
select(class_v1, subgroup, Freq) %>%
mutate(class == stringr::str_remove(class_v1, "class"))
grid <- temp %>%
select(subgroup:class4) %>%
pivot_longer(cols = class1:class4, names_to = "class_v1",
values_to = "Freq") %>%
select(class_v1, subgroup, Freq)
grid$class <- stringr::str_remove(class_v1, "class")
grid$class <- stringr::str_remove(grid$class_v1, "class")
grid <- grid %>% select(class, subgroup, Freq)
grid_plot <- as.data.frame(grid)
colnames(grid_plot) <- c(class_title, subgroup_title, "Frequency")
grid_plot %>% ggplot(aes(x = factor(Subgroup, levels = rev(1:res$data_vars$H),
labels = rev(subgroup_labels)), y = Frequency,
group = factor(Class, levels = rev(class_labels)),
fill = factor(Class, levels = class_labels))) +
geom_bar(stat = "identity", position = "stack") +
ggplot2::labs(x = subgroup_title, y = "Frequency", fill = class_title) +
coord_flip() +
ggplot2::theme_classic() +
ggplot2::theme(text = ggplot2::element_text(size = 15),
axis.text.x = ggplot2::element_text(size = 12, color = "black"),
axis.text.y = ggplot2::element_text(size = 11, color = "black"),
axis.title.x = ggplot2::element_text(size = 13, color = "black", face = "bold"),
axis.title.y = ggplot2::element_text(size = 13, color = "black", face = "bold"),
legend.title = ggplot2::element_text(size = 13, color = "black", face = "bold"),
legend.text = ggplot2::element_text(size = 11, color = "black"),
legend.position = "right")
# totals
temp <- as.data.frame(survey::svyby(~class, ~subgroup, svy_design_wts_only,
svytotal, na.rm = TRUE))
View(temp)
grid <- temp %>%
select(subgroup:class4) %>%
pivot_longer(cols = class1:class4, names_to = "class_v1",
values_to = "Freq") %>%
select(class_v1, subgroup, Freq)
grid$class <- stringr::str_remove(grid$class_v1, "class")
grid <- grid %>% select(class, subgroup, Freq)
grid_plot <- as.data.frame(grid)
colnames(grid_plot) <- c(class_title, subgroup_title, "Frequency")
grid_plot %>% ggplot(aes(x = factor(Subgroup, levels = rev(1:res$data_vars$H),
labels = rev(subgroup_labels)), y = Frequency,
group = factor(Class, levels = rev(class_labels)),
fill = factor(Class, levels = class_labels))) +
geom_bar(stat = "identity", position = "stack") +
ggplot2::labs(x = subgroup_title, y = "Frequency", fill = class_title) +
coord_flip() +
ggplot2::theme_classic() +
ggplot2::theme(text = ggplot2::element_text(size = 15),
axis.text.x = ggplot2::element_text(size = 12, color = "black"),
axis.text.y = ggplot2::element_text(size = 11, color = "black"),
axis.title.x = ggplot2::element_text(size = 13, color = "black", face = "bold"),
axis.title.y = ggplot2::element_text(size = 13, color = "black", face = "bold"),
legend.title = ggplot2::element_text(size = 13, color = "black", face = "bold"),
legend.text = ggplot2::element_text(size = 11, color = "black"),
legend.position = "right")
# Source plotting functions
source(paste0(wd, code_dir, "wrpc_plotting_fns.R"))
# Define labels
item_labels <- colnames(fpq_49categ[, -c(1:3)])
item_labels <- c("Citrus Juice", "Non-Citrus Fruit Juice", "Applesauce",
"Citrus Fruits", "Non-Citrus Fruits", "Avocado", "Plantain",
"Dark Green Vegs", "Deep Yellow Vegs", "Tomato", "White Potato",
"Fried Potato", "Oth Starchy Vegs", "Legumes", "Other Vegs",
"Whole Grains", "Refined Grains", "Corn Breads", "Refined Breads",
"Other Breads", "Pizza", "Savory Snacks", "Sweet Baked Goods",
"Beef", "Pork", "Poultry", "Cold Cuts", "Sausages/Cured Meats",
"Fish", "Eggs", "Nuts/Seeds", "Milk", "Cheese", "Yogurt",
"Cream", "Non-Dairy Creamer", "Dairy Dessert", "Oil",
"Sugar Sweetener", "Artificial Sweetener", "Candy",
"Sugar-Sweetened Bevs", "Diet Bevs", "Meal Replacement Bevs",
"Tea", "Coffee", "Beer", "Wine", "Other Soups")
categ_labels <- c("None", "Monthly", "Weekly", "Daily", "Daily+")
subgroup_labels <-
c("Low-Inc, Non-US, M, Young", "Low-Inc, Non-US, M, Old",
"Low-Inc, Non-US, F, Young", "Low-Inc, Non-US, F, Old",
"Low-Inc, US, M, Young", "Low-Inc, US, M, Old",
"Low-Inc, US, F, Young", "Low-Inc, US, F, Old",
"High-Inc, Non-US, M, Young", "High-Inc, Non-US, M, Old",
"High-Inc, Non-US, F, Young", "High-Inc, Non-US, F, Old",
"High-Inc, US, M, Young", "High-Inc, US, M, Old",
"High-Inc, US, F, Young", "High-Inc, US, F, Old")
plot_wrpc_class_subgroup_dist(res = res_wrpc, weights = TRUE,
subgroup_labels = subgroup_labels,
subgroup_title = "Subgroup", normalize = FALSE)
plot_wrpc_class_subgroup_dist(res = res_wrpc, weights = TRUE,
subgroup_labels = subgroup_labels,
subgroup_title = "Subgroup", normalize = TRUE)
# ggsave(filename = paste0(wd, "Tables_Figures/", "wrpc_ses_local_alloc.png"),
#        width = 6700, height = 8200, units = "px", dpi = 700)
# Proportion of each subpopulation following each global pattern
plot_wrpc_class_subgroup_dist(res = res_wrpc, weights = TRUE,
subgroup_labels = subgroup_labels,
subgroup_title = "Subgroup", normalize = TRUE) +
scale_fill_manual(values = c("#D55E00", "#009E73", "#E69F00", "#56B4E9")) +
guides(fill = guide_legend(title = "Dietary Pattern")) +
theme(legend.position = "top")
ggsave(filename = paste0(wd, "Tables_Figures/", "wrpc_ses_class_subgroup_dist.png"),
width = 4700, height = 4200, units = "px", dpi = 700)
wd
### Survey design
svy_data <- data.frame(sampling_wt = res$data_vars$sampling_wt,
subgroup = as.factor(res$data_vars$h_all),
class = as.factor(res$estimates$c_all))
### Survey design
# svy_data <- data.frame(sampling_wt = res$data_vars$sampling_wt,
#                        subgroup = as.factor(res$data_vars$h_all),
#                        class = as.factor(res$estimates$c_all))
svy_design_wts_only <- survey::svydesign(id = ~1,
weights = ~sampling_wt,
data = svy_data)
svy_data <- data.frame(sampling_wt = res$data_vars$sampling_wt,
subgroup = as.factor(res$data_vars$h_all),
class = as.factor(res$estimates$c_all))
svy_design_wts_only <- survey::svydesign(id = ~1,
weights = ~sampling_wt,
data = svy_data)
# totals
temp <- as.data.frame(survey::svyby(~1, ~subgroup, svy_design_wts_only,
svytotal, na.rm = TRUE))
### Survey design
svy_data <- data.frame(sampling_wt = res_wrpc$data_vars$sampling_wt,
subgroup = as.factor(res_wrpc$data_vars$h_all),
class = as.factor(res_wrpc$estimates$c_all))
svy_design_wts_only <- survey::svydesign(id = ~1,
weights = ~sampling_wt,
data = svy_data)
# totals
temp <- as.data.frame(survey::svyby(~1, ~subgroup, svy_design_wts_only,
svytotal, na.rm = TRUE))
?svyby
?svytotal
as.data.frame(survey::svytotal(~subgroup, design = svy_design_wts_only,
na.rm = TRUE))
# totals
subgroup_total <- as.data.frame(survey::svytotal(~subgroup, design = svy_design_wts_only,
na.rm = TRUE))
View(subgroup_total)
View(subgroups_wtd)
# Equivalent with manual calculation
subgroups_wtd <- as.data.frame(matrix(NA, ncol = 2, nrow = res_wrpc$data_vars$H))
rownames(subgroups_wtd) <- subgroup_labels
colnames(subgroups_wtd) <- c("Sample", "Population")
subgroups_wtd[, 1] <- table(study_data$subgroup_income_nativity_gender_age)
subgroups_wtd[, 2] <- sapply(1:res_wrpc$data_vars$H, function(h)
sum(res_wrpc$data_vars$sampling_wt[res_wrpc$data_vars$h_all == h]))
subgroups_wtd %>%
kbl(digits = 2, booktabs = TRUE, format = format,
caption = "Subpopulation sample sizes and estimated population sizes. Abbreviations: Low-Inc=low-income ($<\$30,000$), High-Inc=high-income ($\geq\$30,000$), Non-US = non-US-born, US=US-born, M=male, F=female, Young=young (18-44 years), Old=old ($\geq$45 years).") %>%
subgroups_wtd %>%
kbl(digits = 2, booktabs = TRUE, format = format,
caption = "Subpopulation sample sizes and estimated population sizes.") %>%
kable_classic() %>%
kable_styling(full_width = FALSE)
library(knitr)
library(kableExtra)
subgroups_wtd %>%
kbl(digits = 2, booktabs = TRUE, format = format,
caption = "Subpopulation sample sizes and estimated population sizes.") %>%
kable_classic() %>%
kable_styling(full_width = FALSE)
subgroups_wtd %>%
kbl(digits = 2, booktabs = TRUE, format = "latex",
caption = "Subpopulation sample sizes and estimated population sizes.") %>%
kable_classic() %>%
kable_styling(full_width = FALSE)
subgroups_wtd %>%
kbl(digits = 2, booktabs = TRUE, format = "html",
caption = "Subpopulation sample sizes and estimated population sizes.") %>%
kable_classic() %>%
kable_styling(full_width = FALSE)
load(paste0(wd, res_dir, "HCHS_income_nativity_gender_age_wrpc_results.RData"))
library(tidyverse)  # data wrangling
library(baysc)      # bayesian survey clustering
library(haven)      # read sas file
library(naniar)     # missingness
library(sfsmisc)    # mult.fig
library(survey)
library(knitr)
library(kableExtra)
wd <- "~/Documents/Github/WRPC/"
wd <- "/n/netscratch/stephenson_lab/Lab/stephwu18/WRPC/"
code_dir <- "Model_Code/"
data_dir <- "Application/HCHS_Data/"
res_dir <- "Results/"
# Read in raw derived variables
raw_derv_vars <- read_sas(paste0(wd, data_dir, "part_derv_inv4.sas7bdat"))
wd <- "~/Documents/Github/WRPC/"
# Read in raw derived variables
raw_derv_vars <- read_sas(paste0(wd, data_dir, "part_derv_inv4.sas7bdat"))
# Read in raw self-report variables
raw_mhea_vars <- read_sas(paste0(wd, data_dir, "mhea_inv4.sas7bdat"))
# Read in raw FPQ data
raw_fpq_vars <- read_sas(paste0(wd, data_dir, "fpe_inv4.sas7bdat"))
# Read in cleaned FPQ data w/ 49 categories
fpq_49categ <- read.csv(paste0(wd, data_dir, "fpq_49categ_2024Nov19.csv"))
# Source WRPC functions
source(paste0(wd, code_dir, "wrpc.R"))
source(paste0(wd, code_dir, "wrpc_mcmc_fns.R"))
source(paste0(wd, code_dir, "wrpc_utilities.R"))
Rcpp::sourceCpp(paste0(wd, code_dir, "wrpc_mcmc.cpp"))
load(paste0(wd, res_dir, "HCHS_income_nativity_gender_age_wrpc_results.RData"))
#=================== Plotting results ==========================================
# load(paste0(wd, res_dir, "HCHS_income_nativity_gender_age_wrpc_results.RData"))
# res_wrpc <- res
subgroup_labels <-
c("Low-Inc, Non-US, M, Young", "Low-Inc, Non-US, M, Old",
"Low-Inc, Non-US, F, Young", "Low-Inc, Non-US, F, Old",
"Low-Inc, US, M, Young", "Low-Inc, US, M, Old",
"Low-Inc, US, F, Young", "Low-Inc, US, F, Old",
"High-Inc, Non-US, M, Young", "High-Inc, Non-US, M, Old",
"High-Inc, Non-US, F, Young", "High-Inc, Non-US, F, Old",
"High-Inc, US, M, Young", "High-Inc, US, M, Old",
"High-Inc, US, F, Young", "High-Inc, US, F, Old")
# Source plotting functions
source(paste0(wd, code_dir, "wrpc_plotting_fns.R"))
# Define labels
item_labels <- colnames(fpq_49categ[, -c(1:3)])
item_labels <- c("Citrus Juice", "Non-Citrus Fruit Juice", "Applesauce",
"Citrus Fruits", "Non-Citrus Fruits", "Avocado", "Plantain",
"Dark Green Vegs", "Deep Yellow Vegs", "Tomato", "White Potato",
"Fried Potato", "Oth Starchy Vegs", "Legumes", "Other Vegs",
"Whole Grains", "Refined Grains", "Corn Breads", "Refined Breads",
"Other Breads", "Pizza", "Savory Snacks", "Sweet Baked Goods",
"Beef", "Pork", "Poultry", "Cold Cuts", "Sausages/Cured Meats",
"Fish", "Eggs", "Nuts/Seeds", "Milk", "Cheese", "Yogurt",
"Cream", "Non-Dairy Creamer", "Dairy Dessert", "Oil",
"Sugar Sweetener", "Artificial Sweetener", "Candy",
"Sugar-Sweetened Bevs", "Diet Bevs", "Meal Replacement Bevs",
"Tea", "Coffee", "Beer", "Wine", "Other Soups")
categ_labels <- c("None", "Monthly", "Weekly", "Daily", "Daily+")
plot_wrpc_global_pattern_profiles(res = res_wrpc,
item_labels = item_labels, item_title = "Item",
categ_labels = categ_labels) +
theme(legend.text = element_text(size = 10),
legend.title = element_text(size = 10))
res_wrpc <- res
# ggsave(filename = paste0(wd, "Tables_Figures/", "wrpc_ses_local_alloc.png"),
#        width = 6700, height = 8200, units = "px", dpi = 700)
# Proportion of each subpopulation following each global pattern
plot_wrpc_class_subgroup_dist(res = res_wrpc, weights = TRUE,
subgroup_labels = subgroup_labels,
subgroup_title = "Subgroup", normalize = TRUE) +
scale_fill_manual(values = c("#D55E00", "#009E73", "#E69F00", "#56B4E9")) +
guides(fill = guide_legend(title = "Dietary Pattern")) +
theme(legend.position = "top")
# ggsave(filename = paste0(wd, "Tables_Figures/", "wrpc_ses_local_alloc.png"),
#        width = 6700, height = 8200, units = "px", dpi = 700)
# Proportion of each subpopulation following each global pattern
plot_wrpc_class_subgroup_dist(res = res_wrpc, weights = TRUE,
subgroup_labels = subgroup_labels,
subgroup_title = "Subgroup", normalize = FALSE) +
scale_fill_manual(values = c("#D55E00", "#009E73", "#E69F00", "#56B4E9")) +
guides(fill = guide_legend(title = "Dietary Pattern")) +
theme(legend.position = "top")
library(tidyverse)  # data wrangling
library(baysc)      # bayesian survey clustering
library(haven)      # read sas file
library(naniar)     # missingness
library(sfsmisc)    # mult.fig
wd <- "~/Documents/Github/WRPC/"
wd <- "/n/holyscratch01/stephenson_lab/Users/stephwu18/WRPC/"
code_dir <- "Model_Code/"
data_dir <- "Application/HCHS_Data/"
res_dir <- "Results/"
# Read in raw derived variables
raw_derv_vars <- read_sas(paste0(wd, data_dir, "part_derv_inv4.sas7bdat"))
wd <- "~/Documents/Github/WRPC/"
code_dir <- "Model_Code/"
data_dir <- "Application/HCHS_Data/"
res_dir <- "Results/"
# Read in raw derived variables
raw_derv_vars <- read_sas(paste0(wd, data_dir, "part_derv_inv4.sas7bdat"))
# Read in raw FPQ data
raw_fpq_vars <- read_sas(paste0(wd, data_dir, "fpe_inv4.sas7bdat"))
# Read in cleaned FPQ data
sol_data <- read.csv(paste0(wd, data_dir, "FPQ129_CVD07FEB2023.csv"))
View(raw_derv_vars)
colnames(raw_derv_vars)
